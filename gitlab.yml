stages:
  - setup-harbor

variables:
  PYTHON_SCRIPT: "harbor_setup.py"
  PYTHON_IMAGE: "python:3.10"

setup_harbor:
  stage: setup-harbor
  image: $PYTHON_IMAGE
  script:
    - pip install requests

    # Ch·∫°y script t·∫°o Harbor project v√† robot
    - python $PYTHON_SCRIPT "$PROJECT_NAME"

    # Hi·ªÉn th·ªã n·ªôi dung file .env
    - echo "üìù Generated .env:"
    - cat .env

    # ƒê·ªçc bi·∫øn t·ª´ .env
    - export $(grep '=' .env | xargs)

    # Ki·ªÉm tra lo·∫°i m√¥i tr∆∞·ªùng d·ª±a tr√™n t√™n project
    - |
      if [[ "$PROJECT_NAME" == dev-* ]]; then
        echo "üì¶ Dev project detected"
        export TARGET_PROJECT_ID="$PROJECT1_ID"
        
        # G·ª≠i t·∫•t c·∫£ bi·∫øn v√†o c√πng 1 project (dev)
        for var in HARBOR_PROJECT_DEV HARBOR_USER_DEV HARBOR_TOKEN_DEV HARBOR_PULL_USER_DEV HARBOR_PULL_TOKEN_DEV; do
          curl --silent --show-error --fail --request PUT \
            --header "PRIVATE-TOKEN: $CI_JOB_TOKEN" \
            --form "key=$var" --form "value=${!var}" \
            "https://gitlab.com/api/v4/projects/$TARGET_PROJECT_ID/variables/$var"
        done
      else
        echo "üì¶ Prod project detected"

        # G·ª≠i bi·∫øn push v√†o Project #1
        for var in HARBOR_PROJECT_PROD HARBOR_USER_PROD HARBOR_TOKEN_PROD; do
          curl --silent --show-error --fail --request PUT \
            --header "PRIVATE-TOKEN: $CI_JOB_TOKEN" \
            --form "key=$var" --form "value=${!var}" \
            "https://gitlab.com/api/v4/projects/$PROJECT1_ID/variables/$var"
        done

        # G·ª≠i bi·∫øn pull-only v√†o Project #2
        for var in HARBOR_PULL_USER_PROD HARBOR_PULL_TOKEN_PROD; do
          curl --silent --show-error --fail --request PUT \
            --header "PRIVATE-TOKEN: $CI_JOB_TOKEN" \
            --form "key=$var" --form "value=${!var}" \
            "https://gitlab.com/api/v4/projects/$PROJECT2_ID/variables/$var"
        done
      fi

  only:
    - manual
